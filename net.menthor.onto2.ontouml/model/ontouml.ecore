<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="ontouml" nsURI="http://menthor.net/" nsPrefix="menthor">
  <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
    <details key="testsDirectory" value="/net.menthor.onto2.ontouml.tests/src-gen"/>
    <details key="editDirectory" value="/net.menthor.onto2.ontouml.edit/src-gen"/>
    <details key="editorDirectory" value="/net.menthor.onto2.ontouml.editor/src-gen"/>
    <details key="fileExtensions" value="mouml"/>
    <details key="basePackage" value="net.menthor.onto2"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="Element" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =======================================================================================================&#xA; OntoUML2.0&#xA;&#xA;&#x9;@author: John Guerson&#xA;&#x9;@author: Tiago Prince Sales&#xA; @co-author: Joao Paulo Andrade Almeida&#xA; ========================================================================================================"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NamedElement" abstract="true" eSuperTypes="#//Element">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Container" abstract="true" eSuperTypes="#//NamedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A &quot;Container&quot; is a &quot;NamedElement&quot; that can contain a set of:&#xA; Packages, Relationships, Classes, DataTypes, Generalization Sets, Generalizations and Constraints"/>
    </eAnnotations>
    <eOperations name="packages" unique="false" upperBound="-1" eType="#//Package">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" Returns the packages at this container."/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Package%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Package%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.ContainedElement%>> _elements = this.getElements();&#xA;for (final &lt;%net.menthor.onto2.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;if ((e instanceof &lt;%net.menthor.onto2.ontouml.Package%>))&#xA;&#x9;{&#xA;&#x9;&#x9;result.add(((&lt;%net.menthor.onto2.ontouml.Package%>)e));&#xA;&#x9;}&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Package%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allPackages" unique="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns recursively all packages at this container."/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.ContainedElement%>> _elements = c.getElements();&#xA;for (final &lt;%net.menthor.onto2.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;if ((e instanceof &lt;%net.menthor.onto2.ontouml.Package%>))&#xA;&#x9;{&#xA;&#x9;&#x9;result.add(((&lt;%net.menthor.onto2.ontouml.Package%>)e));&#xA;&#x9;&#x9;this.allPackages(((&lt;%net.menthor.onto2.ontouml.Container%>)e), result);&#xA;&#x9;}&#xA;}"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Container"/>
      <eParameters name="result" unique="false" upperBound="-1" eType="#//Package"/>
    </eOperations>
    <eOperations name="allPackages" unique="false" upperBound="-1" eType="#//Package">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Package%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Package%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Package%>> _eList = &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Package%>>toEList(result);&#xA;this.allPackages(this, _eList);&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Package%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="relationships" unique="false" upperBound="-1" eType="#//Relationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" Returns the relationships at this container"/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.ContainedElement%>> _elements = this.getElements();&#xA;for (final &lt;%net.menthor.onto2.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;if ((e instanceof &lt;%net.menthor.onto2.ontouml.Relationship%>))&#xA;&#x9;{&#xA;&#x9;&#x9;result.add(((&lt;%net.menthor.onto2.ontouml.Relationship%>)e));&#xA;&#x9;}&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allRelationships" unique="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns recursively all relationships at this container"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.ContainedElement%>> _elements = c.getElements();&#xA;for (final &lt;%net.menthor.onto2.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.onto2.ontouml.Relationship%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;result.add(((&lt;%net.menthor.onto2.ontouml.Relationship%>)e));&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.onto2.ontouml.Package%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.allRelationships(((&lt;%net.menthor.onto2.ontouml.Container%>)e), result);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Container"/>
      <eParameters name="result" unique="false" upperBound="-1" eType="#//Relationship"/>
    </eOperations>
    <eOperations name="allRelationships" unique="false" upperBound="-1" eType="#//Relationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>> _eList = &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>>toEList(result);&#xA;this.allRelationships(this, _eList);&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="generalizationSets" unique="false" upperBound="-1" eType="#//GeneralizationSet">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" Returns the generalization sets at this container"/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.GeneralizationSet%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.GeneralizationSet%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.ContainedElement%>> _elements = this.getElements();&#xA;for (final &lt;%net.menthor.onto2.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;if ((e instanceof &lt;%net.menthor.onto2.ontouml.GeneralizationSet%>))&#xA;&#x9;{&#xA;&#x9;&#x9;result.add(((&lt;%net.menthor.onto2.ontouml.GeneralizationSet%>)e));&#xA;&#x9;}&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.GeneralizationSet%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allGeneralizationSets" unique="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns recursively all generalization sets at this container"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.ContainedElement%>> _elements = c.getElements();&#xA;for (final &lt;%net.menthor.onto2.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.onto2.ontouml.GeneralizationSet%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;result.add(((&lt;%net.menthor.onto2.ontouml.GeneralizationSet%>)e));&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.onto2.ontouml.Package%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.allGeneralizationSets(((&lt;%net.menthor.onto2.ontouml.Container%>)e), result);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Container"/>
      <eParameters name="result" unique="false" upperBound="-1" eType="#//GeneralizationSet"/>
    </eOperations>
    <eOperations name="allGeneralizationSets" unique="false" upperBound="-1" eType="#//GeneralizationSet">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.GeneralizationSet%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.GeneralizationSet%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.GeneralizationSet%>> _eList = &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.GeneralizationSet%>>toEList(result);&#xA;this.allGeneralizationSets(this, _eList);&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.GeneralizationSet%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="classes" unique="false" upperBound="-1" eType="#//Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" Returns the classes at this container"/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.ContainedElement%>> _elements = this.getElements();&#xA;for (final &lt;%net.menthor.onto2.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;if ((e instanceof &lt;%net.menthor.onto2.ontouml.Class%>))&#xA;&#x9;{&#xA;&#x9;&#x9;result.add(((&lt;%net.menthor.onto2.ontouml.Class%>)e));&#xA;&#x9;}&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allClasses" unique="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns recursively all classes at this container"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.ContainedElement%>> _elements = c.getElements();&#xA;for (final &lt;%net.menthor.onto2.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.onto2.ontouml.Class%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;result.add(((&lt;%net.menthor.onto2.ontouml.Class%>)e));&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.onto2.ontouml.Package%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.allClasses(((&lt;%net.menthor.onto2.ontouml.Container%>)e), result);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Container"/>
      <eParameters name="result" unique="false" upperBound="-1" eType="#//Class"/>
    </eOperations>
    <eOperations name="allClasses" unique="false" upperBound="-1" eType="#//Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> _eList = &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>toEList(result);&#xA;this.allClasses(this, _eList);&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="dataTypes" unique="false" upperBound="-1" eType="#//DataType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" Returns the dataTypes at this container"/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.DataType%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.DataType%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.ContainedElement%>> _elements = this.getElements();&#xA;for (final &lt;%net.menthor.onto2.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;if ((e instanceof &lt;%net.menthor.onto2.ontouml.DataType%>))&#xA;&#x9;{&#xA;&#x9;&#x9;result.add(((&lt;%net.menthor.onto2.ontouml.DataType%>)e));&#xA;&#x9;}&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.DataType%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allDataTypes" unique="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns recursively all dataTypes at this container"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.ContainedElement%>> _elements = c.getElements();&#xA;for (final &lt;%net.menthor.onto2.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.onto2.ontouml.DataType%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;result.add(((&lt;%net.menthor.onto2.ontouml.DataType%>)e));&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.onto2.ontouml.Package%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.allDataTypes(((&lt;%net.menthor.onto2.ontouml.Container%>)e), result);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Container"/>
      <eParameters name="result" unique="false" upperBound="-1" eType="#//DataType"/>
    </eOperations>
    <eOperations name="allDataTypes" unique="false" upperBound="-1" eType="#//DataType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.DataType%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.DataType%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.DataType%>> _eList = &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.DataType%>>toEList(result);&#xA;this.allDataTypes(this, _eList);&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.DataType%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="types" unique="false" upperBound="-1" eType="#//Type">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" Returns the types (classes and dataTypes) at this container"/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Type%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Type%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.ContainedElement%>> _elements = this.getElements();&#xA;for (final &lt;%net.menthor.onto2.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;if ((e instanceof &lt;%net.menthor.onto2.ontouml.Type%>))&#xA;&#x9;{&#xA;&#x9;&#x9;result.add(((&lt;%net.menthor.onto2.ontouml.Type%>)e));&#xA;&#x9;}&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Type%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allTypes" unique="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns recursively all types (classes and dataTypes) at this container"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.ContainedElement%>> _elements = c.getElements();&#xA;for (final &lt;%net.menthor.onto2.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.onto2.ontouml.Type%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;result.add(((&lt;%net.menthor.onto2.ontouml.Type%>)e));&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.onto2.ontouml.Package%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.allTypes(((&lt;%net.menthor.onto2.ontouml.Container%>)e), result);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Container"/>
      <eParameters name="result" unique="false" upperBound="-1" eType="#//Type"/>
    </eOperations>
    <eOperations name="allTypes" unique="false" upperBound="-1" eType="#//Type">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Type%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Type%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Type%>> _eList = &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Type%>>toEList(result);&#xA;this.allTypes(this, _eList);&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Type%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="elements" ordered="false"
        upperBound="-1" eType="#//ContainedElement" containment="true" resolveProxies="false"
        eOpposite="#//ContainedElement/holder"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ContainedElement" abstract="true" eSuperTypes="#//Element">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A &quot;ContainedElement&quot; is an &quot;Element&quot; that has one Container and possibly a set of Comments."/>
    </eAnnotations>
    <eOperations name="getModel" unique="false" eType="#//Model">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the root from a given container"/>
        <details key="body" value="if ((c instanceof &lt;%net.menthor.onto2.ontouml.Model%>))&#xA;{&#xA;&#x9;return ((&lt;%net.menthor.onto2.ontouml.Model%>)c);&#xA;}&#xA;else&#xA;{&#xA;&#x9;if ((c instanceof &lt;%net.menthor.onto2.ontouml.ContainedElement%>))&#xA;&#x9;{&#xA;&#x9;&#x9;&lt;%net.menthor.onto2.ontouml.Container%> _holder = ((&lt;%net.menthor.onto2.ontouml.ContainedElement%>)c).getHolder();&#xA;&#x9;&#x9;return this.getModel(_holder);&#xA;&#x9;}&#xA;}&#xA;return null;"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Container"/>
    </eOperations>
    <eOperations name="getModel" unique="false" eType="#//Model">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the root container"/>
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.Container%> _holder = this.getHolder();&#xA;return this.getModel(_holder);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="holder" lowerBound="1"
        eType="#//Container" eOpposite="#//Container/elements"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="comments" upperBound="-1"
        eType="#//Comment" containment="true" resolveProxies="false" eOpposite="#//Comment/owner"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Comment" eSuperTypes="#//Element">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A &quot;Comment&quot; is a text which has a &quot;ContainedElement&quot; owner."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="content" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owner" lowerBound="1" eType="#//ContainedElement"
        eOpposite="#//ContainedElement/comments"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Model" eSuperTypes="#//Container">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A &quot;Model&quot; is just a &quot;Container&quot;."/>
    </eAnnotations>
    <eOperations name="initializeValidator" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return true;"/>
      </eAnnotations>
      <eParameters name="diagnostics" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EDiagnosticChain"/>
      <eParameters name="context" unique="false">
        <eGenericType eClassifier="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EJavaObject"/>
          <eTypeArguments eClassifier="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EJavaObject"/>
        </eGenericType>
      </eParameters>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Package" eSuperTypes="#//Container #//ContainedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A &quot;Package&quot; is both a &quot;Container&quot; and a &quot;ContainedElement&quot;."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Classifier" abstract="true" eSuperTypes="#//ContainedElement #//NamedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A &quot;Classifier&quot; is a &quot;Type&quot; (i.e., a Class or a DataType) or a Relationship."/>
    </eAnnotations>
    <eOperations name="children" unique="false" upperBound="-1" eType="#//Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" Direct children"/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> list = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Generalization%>> _isGeneralIn = this.getIsGeneralIn();&#xA;for (final &lt;%net.menthor.onto2.ontouml.Generalization%> g : _isGeneralIn)&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Classifier%> _specific = g.getSpecific();&#xA;&#x9;list.add(_specific);&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>>toEList(list);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="parents" unique="false" upperBound="-1" eType="#//Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Direct parents"/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> list = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Generalization%>> _isSpecificIn = this.getIsSpecificIn();&#xA;for (final &lt;%net.menthor.onto2.ontouml.Generalization%> g : _isSpecificIn)&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Classifier%> _general = g.getGeneral();&#xA;&#x9;list.add(_general);&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>>toEList(list);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allParents" unique="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* All (direct and indirect) parents"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Generalization%>> _isSpecificIn = c.getIsSpecificIn();&#xA;for (final &lt;%net.menthor.onto2.ontouml.Generalization%> g : _isSpecificIn)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;final &lt;%net.menthor.onto2.ontouml.Classifier%> parent = g.getGeneral();&#xA;&#x9;&#x9;result.add(parent);&#xA;&#x9;&#x9;this.allParents(parent, result);&#xA;&#x9;}&#xA;}"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Classifier"/>
      <eParameters name="result" unique="false" upperBound="-1" eType="#//Classifier"/>
    </eOperations>
    <eOperations name="allParents" unique="false" upperBound="-1" eType="#//Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* All (direct and indirect) parents"/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> list = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _eList = &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>>toEList(list);&#xA;this.allParents(this, _eList);&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>>toEList(list);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allChildren" unique="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" All (direct and indirect) children"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Generalization%>> _isGeneralIn = c.getIsGeneralIn();&#xA;for (final &lt;%net.menthor.onto2.ontouml.Generalization%> g : _isGeneralIn)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;final &lt;%net.menthor.onto2.ontouml.Classifier%> child = g.getSpecific();&#xA;&#x9;&#x9;result.add(child);&#xA;&#x9;&#x9;this.allChildren(child, result);&#xA;&#x9;}&#xA;}"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Classifier"/>
      <eParameters name="result" unique="false" upperBound="-1" eType="#//Classifier"/>
    </eOperations>
    <eOperations name="allChildren" unique="false" upperBound="-1" eType="#//Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" All (direct and indirect) children"/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> list = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _eList = &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>>toEList(list);&#xA;this.allChildren(this, _eList);&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>>toEList(list);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="siblings" unique="false" upperBound="-1" eType="#//Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns direct siblings i.e. classifiers which specialize the same super-classifier as this classifier"/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _parents = this.parents();&#xA;for (final &lt;%net.menthor.onto2.ontouml.Classifier%> p : _parents)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _children = p.children();&#xA;&#x9;for (final &lt;%net.menthor.onto2.ontouml.Classifier%> sibling : _children)&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _equals = sibling.equals(this);&#xA;&#x9;&#x9;boolean _not = (!_equals);&#xA;&#x9;&#x9;if (_not)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;result.add(sibling);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="ends" unique="false" upperBound="-1" eType="#//EndPoint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns all direct end-points from this classifier (in which we can navigate from it)&#xA; In other words, it returns all opposite ends of the relationships connected to this classifier."/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>>newArrayList();&#xA;&lt;%net.menthor.onto2.ontouml.Model%> _model = this.getModel();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>> _allRelationships = _model.allRelationships();&#xA;for (final &lt;%net.menthor.onto2.ontouml.Relationship%> rel : _allRelationships)&#xA;{&#xA;&#x9;boolean _isEnd = rel.isEnd(this);&#xA;&#x9;if (_isEnd)&#xA;&#x9;{&#xA;&#x9;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> _endPoints = rel.getEndPoints();&#xA;&#x9;&#x9;for (final &lt;%net.menthor.onto2.ontouml.EndPoint%> ep : _endPoints)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;final &lt;%net.menthor.onto2.ontouml.Classifier%> type_ = ep.getEndType();&#xA;&#x9;&#x9;&#x9;&#x9;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(type_, null));&#xA;&#x9;&#x9;&#x9;&#x9;if (_notEquals)&#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;boolean _equals = type_.equals(this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;boolean _not = (!_equals);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (_not)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;result.add(ep);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="ends" unique="false" upperBound="-1" eType="#//EndPoint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns all direct end-points of a given relationship stereotype from this classifier (in which we can navigate from it)&#xA; In other words, it returns all opposite ends of the relationships connected to this classifier."/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>>newArrayList();&#xA;&lt;%net.menthor.onto2.ontouml.Model%> _model = this.getModel();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>> _allRelationships = _model.allRelationships();&#xA;for (final &lt;%net.menthor.onto2.ontouml.Relationship%> rel : _allRelationships)&#xA;{&#xA;&#x9;boolean _and = false;&#xA;&#x9;boolean _isEnd = rel.isEnd(this);&#xA;&#x9;if (!_isEnd)&#xA;&#x9;{&#xA;&#x9;&#x9;_and = false;&#xA;&#x9;} else&#xA;&#x9;{&#xA;&#x9;&#x9;&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = rel.getStereotype();&#xA;&#x9;&#x9;boolean _equals = _stereotype.equals(stereo);&#xA;&#x9;&#x9;_and = _equals;&#xA;&#x9;}&#xA;&#x9;if (_and)&#xA;&#x9;{&#xA;&#x9;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> _endPoints = rel.getEndPoints();&#xA;&#x9;&#x9;for (final &lt;%net.menthor.onto2.ontouml.EndPoint%> ep : _endPoints)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;final &lt;%net.menthor.onto2.ontouml.Classifier%> type_ = ep.getEndType();&#xA;&#x9;&#x9;&#x9;&#x9;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(type_, null));&#xA;&#x9;&#x9;&#x9;&#x9;if (_notEquals)&#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;boolean _equals_1 = type_.equals(this);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;boolean _not = (!_equals_1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (_not)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;result.add(ep);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>>toEList(result);"/>
      </eAnnotations>
      <eParameters name="stereo" unique="false" eType="#//RelationshipStereotype"/>
    </eOperations>
    <eOperations name="allEnds" unique="false" upperBound="-1" eType="#//EndPoint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns all direct and indirect end-points from this classifier (in which we can navigate from it)&#xA; In other words, it returns all opposite ends of the relationships connected to this classifier, or to a parent of this classifier."/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> _ends = this.ends();&#xA;result.addAll(_ends);&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _allParents = this.allParents();&#xA;for (final &lt;%net.menthor.onto2.ontouml.Classifier%> p : _allParents)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> _ends_1 = p.ends();&#xA;&#x9;result.addAll(_ends_1);&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allEnds" unique="false" upperBound="-1" eType="#//EndPoint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns all direct and indirect end-points from this classifier (in which we can navigate from it)&#xA; In other words, it returns all opposite ends of the relationships connected to this classifier, or to a parent of this classifier."/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> _ends = this.ends(stereo);&#xA;result.addAll(_ends);&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _allParents = this.allParents();&#xA;for (final &lt;%net.menthor.onto2.ontouml.Classifier%> p : _allParents)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> _ends_1 = p.ends(stereo);&#xA;&#x9;result.addAll(_ends_1);&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>>toEList(result);"/>
      </eAnnotations>
      <eParameters name="stereo" unique="false" eType="#//RelationshipStereotype"/>
    </eOperations>
    <eOperations name="relationships" unique="false" upperBound="-1" eType="#//Relationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns all direct relationships this classifier is connected to"/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>>newArrayList();&#xA;&lt;%net.menthor.onto2.ontouml.Model%> _model = this.getModel();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>> _allRelationships = _model.allRelationships();&#xA;for (final &lt;%net.menthor.onto2.ontouml.Relationship%> rel : _allRelationships)&#xA;{&#xA;&#x9;boolean _isEnd = rel.isEnd(this);&#xA;&#x9;if (_isEnd)&#xA;&#x9;{&#xA;&#x9;&#x9;result.add(rel);&#xA;&#x9;}&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allRelationships" unique="false" upperBound="-1" eType="#//Relationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns all direct and indirect relationships this classifier is connected to"/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>> _relationships = this.relationships();&#xA;result.addAll(_relationships);&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _allParents = this.allParents();&#xA;for (final &lt;%net.menthor.onto2.ontouml.Classifier%> p : _allParents)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>> _relationships_1 = p.relationships();&#xA;&#x9;result.addAll(_relationships_1);&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Relationship%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isDisjointOfParentsOf" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _allParents = c.allParents();&#xA;for (final &lt;%net.menthor.onto2.ontouml.Classifier%> o : _allParents)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _allParents_1 = this.allParents();&#xA;&#x9;&#x9;boolean _contains = _allParents_1.contains(o);&#xA;&#x9;&#x9;if (_contains)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;boolean _equals = this.equals(o);&#xA;&#x9;&#x9;if (_equals)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;return true;"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Classifier"/>
    </eOperations>
    <eOperations name="isDisjointOfChildrenOf" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _allChildren = c.allChildren();&#xA;for (final &lt;%net.menthor.onto2.ontouml.Classifier%> o : _allChildren)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _allParents = this.allParents();&#xA;&#x9;&#x9;boolean _contains = _allParents.contains(o);&#xA;&#x9;&#x9;if (_contains)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;boolean _equals = this.equals(o);&#xA;&#x9;&#x9;if (_equals)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;return true;"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Classifier"/>
    </eOperations>
    <eOperations name="isDisjointOf" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isDisjointOfParentsOf = this.isDisjointOfParentsOf(c);&#xA;if (!_isDisjointOfParentsOf)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isDisjointOfChildrenOf = this.isDisjointOfChildrenOf(c);&#xA;&#x9;_and = _isDisjointOfChildrenOf;&#xA;}&#xA;if (_and)&#xA;{&#xA;&#x9;return true;&#xA;}&#xA;return false;"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Classifier"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="definitions" unique="false"
        upperBound="-1" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="synonyms" unique="false"
        upperBound="-1" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="text" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="isGeneralIn" upperBound="-1"
        eType="#//Generalization" eOpposite="#//Generalization/general"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="isSpecificIn" upperBound="-1"
        eType="#//Generalization" eOpposite="#//Generalization/specific"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Type" abstract="true" eSuperTypes="#//Classifier">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A &quot;Type&quot; is a &quot;Class&quot; or a &quot;DataType&quot;."/>
    </eAnnotations>
    <eOperations name="relatedTypes" unique="false" upperBound="-1" eType="#//Type">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns all types directly connected to this type through a relationship."/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Type%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Type%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> _ends = this.ends();&#xA;for (final &lt;%net.menthor.onto2.ontouml.EndPoint%> ep : _ends)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;final &lt;%net.menthor.onto2.ontouml.Classifier%> type_ = ep.getEndType();&#xA;&#x9;&#x9;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(type_, null));&#xA;&#x9;&#x9;if (_notEquals)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;result.add(((&lt;%net.menthor.onto2.ontouml.Type%>) type_));&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Type%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allRelatedTypes" unique="false" upperBound="-1" eType="#//Type">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="*Returns all types directly and indirectly connected to this type through a relationship."/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Type%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Type%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> _allEnds = this.allEnds();&#xA;for (final &lt;%net.menthor.onto2.ontouml.EndPoint%> ep : _allEnds)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;final &lt;%net.menthor.onto2.ontouml.Classifier%> type_ = ep.getEndType();&#xA;&#x9;&#x9;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(type_, null));&#xA;&#x9;&#x9;if (_notEquals)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;result.add(((&lt;%net.menthor.onto2.ontouml.Type%>) type_));&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Type%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributes" ordered="false"
        upperBound="-1" eType="#//Attribute" containment="true" resolveProxies="false"
        eOpposite="#//Attribute/owner"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Property" abstract="true" eSuperTypes="#//NamedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A &quot;Property&quot; is an &quot;Attribute&quot; or an &quot;End-Point&quot;."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOrdered" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="lowerBound" unique="false"
        lowerBound="1" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EInt"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="upperBound" unique="false"
        lowerBound="1" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EInt"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDependency" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="PrimitiveStereotype">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* Possible primitive stereotypes are Boolean, String, Real, Integer, Date and DateTime"/>
    </eAnnotations>
    <eLiterals name="Unset"/>
    <eLiterals name="Boolean"/>
    <eLiterals name="String"/>
    <eLiterals name="Real"/>
    <eLiterals name="Integer"/>
    <eLiterals name="Date"/>
    <eLiterals name="DateTime"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Attribute" eSuperTypes="#//Property">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* An &quot;Attribute&quot; has a primitive stereotype and a &quot;Type&quot; owner (a Class or a DataType)."/>
    </eAnnotations>
    <eOperations name="isInteger" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.PrimitiveStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.PrimitiveStereotype%>.INTEGER);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isBoolean" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.PrimitiveStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.PrimitiveStereotype%>.BOOLEAN);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isReal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.PrimitiveStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.PrimitiveStereotype%>.REAL);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isDate" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.PrimitiveStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.PrimitiveStereotype%>.DATE);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isDateTime" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.PrimitiveStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.PrimitiveStereotype%>.DATE_TIME);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isString" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.PrimitiveStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.PrimitiveStereotype%>.STRING);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="definitions" unique="false"
        upperBound="-1" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="synonyms" unique="false"
        upperBound="-1" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="text" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="stereotype" unique="false"
        eType="#//PrimitiveStereotype"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owner" lowerBound="1" eType="#//Type"
        eOpposite="#//Type/attributes"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="ConstraintSteteotype">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* Possible constraint stereotypes are static &quot;Invariants&quot; and &quot;Derivations&quot;,&#xA; and dynamic &quot;Temporal&quot; or &quot;Historical&quot;."/>
    </eAnnotations>
    <eLiterals name="Invariant"/>
    <eLiterals name="Derivation"/>
    <eLiterals name="Temporal"/>
    <eLiterals name="Historical"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Constraint" eSuperTypes="#//ContainedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A &quot;Constraint&quot; is a constraint usually written in OCL.&#xA; Here we support static invariants and derivations from standard OCL&#xA; And also, temporal invariants and definition of historical relationships."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="stereotype" unique="false"
        eType="#//ConstraintSteteotype"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="context" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ruleAsString" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="ClassStereotype">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A Class Stereotype can be a Kind, Collective, Quantity,&#xA; Relator Mode, Quality, Role, Phase, SubKind, Category, Mixin, RoleMixin,&#xA; PhaseMixin, Event or HighOrder."/>
    </eAnnotations>
    <eLiterals name="Unset"/>
    <eLiterals name="Kind"/>
    <eLiterals name="Collective"/>
    <eLiterals name="Quantity"/>
    <eLiterals name="Relator"/>
    <eLiterals name="Mode"/>
    <eLiterals name="Quality"/>
    <eLiterals name="Role"/>
    <eLiterals name="Phase"/>
    <eLiterals name="SubKind"/>
    <eLiterals name="Category"/>
    <eLiterals name="Mixin"/>
    <eLiterals name="RoleMixin"/>
    <eLiterals name="PhaseMixin"/>
    <eLiterals name="Event"/>
    <eLiterals name="HighOrder"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="DataTypeStereotype">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A DataType Stereotype can be a Domain, Dimension, Enuneration or DataType itself."/>
    </eAnnotations>
    <eLiterals name="Unset"/>
    <eLiterals name="Domain"/>
    <eLiterals name="Dimension"/>
    <eLiterals name="Enumeration"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Literal" eSuperTypes="#//Element">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* Literals for enumerations."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owner" lowerBound="1" eType="#//DataType"
        eOpposite="#//DataType/literals"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="upperBoundRegion" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EFloat"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="lowerBoundRegion" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EFloat"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Scale">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* Structure Scale for Dimensions. Possible scales are Interval, Rational, Ordinal or Nominal."/>
    </eAnnotations>
    <eLiterals name="Unset"/>
    <eLiterals name="Interval"/>
    <eLiterals name="Rational"/>
    <eLiterals name="Ordinal"/>
    <eLiterals name="Nominal"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Measurement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* Structure measurements for Dimensions. Possible measures are Integer, Real, Decimal or String."/>
    </eAnnotations>
    <eLiterals name="Unset"/>
    <eLiterals name="Integer"/>
    <eLiterals name="Real"/>
    <eLiterals name="Decimal"/>
    <eLiterals name="String"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DataType" eSuperTypes="#//Type">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A &quot;DataType&quot; is a Domain, Dimension, Enumeration or DataType."/>
    </eAnnotations>
    <eOperations name="isEnumeration" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.DataTypeStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.DataTypeStereotype%>.ENUMERATION);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isDomain" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.DataTypeStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.DataTypeStereotype%>.DOMAIN);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isDimension" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.DataTypeStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.DataTypeStereotype%>.DIMENSION);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isDataType" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;&lt;%net.menthor.onto2.ontouml.DataTypeStereotype%> _stereotype = this.getStereotype();&#xA;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.DataTypeStereotype%>.UNSET);&#xA;if (_equals)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.DataTypeStereotype%> _stereotype_1 = this.getStereotype();&#xA;&#x9;boolean _equals_1 = &lt;%com.google.common.base.Objects%>.equal(_stereotype_1, null);&#xA;&#x9;_or = _equals_1;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isNominal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.onto2.ontouml.Scale%> _scale = this.getScale();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_scale, null));&#xA;if (!_notEquals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Scale%> _scale_1 = this.getScale();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_scale_1, &lt;%net.menthor.onto2.ontouml.Scale%>.NOMINAL);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isInterval" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.onto2.ontouml.Scale%> _scale = this.getScale();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_scale, null));&#xA;if (!_notEquals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Scale%> _scale_1 = this.getScale();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_scale_1, &lt;%net.menthor.onto2.ontouml.Scale%>.INTERVAL);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isOrdinal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.onto2.ontouml.Scale%> _scale = this.getScale();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_scale, null));&#xA;if (!_notEquals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Scale%> _scale_1 = this.getScale();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_scale_1, &lt;%net.menthor.onto2.ontouml.Scale%>.ORDINAL);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isRational" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.onto2.ontouml.Scale%> _scale = this.getScale();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_scale, null));&#xA;if (!_notEquals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Scale%> _scale_1 = this.getScale();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_scale_1, &lt;%net.menthor.onto2.ontouml.Scale%>.RATIONAL);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isString" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.onto2.ontouml.Measurement%> _measurement = this.getMeasurement();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_measurement, null));&#xA;if (!_notEquals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Measurement%> _measurement_1 = this.getMeasurement();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_measurement_1, &lt;%net.menthor.onto2.ontouml.Measurement%>.STRING);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isInteger" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.onto2.ontouml.Measurement%> _measurement = this.getMeasurement();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_measurement, null));&#xA;if (!_notEquals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Measurement%> _measurement_1 = this.getMeasurement();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_measurement_1, &lt;%net.menthor.onto2.ontouml.Measurement%>.INTEGER);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isDecimal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.onto2.ontouml.Measurement%> _measurement = this.getMeasurement();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_measurement, null));&#xA;if (!_notEquals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Measurement%> _measurement_1 = this.getMeasurement();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_measurement_1, &lt;%net.menthor.onto2.ontouml.Measurement%>.DECIMAL);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isReal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.onto2.ontouml.Measurement%> _measurement = this.getMeasurement();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_measurement, null));&#xA;if (!_notEquals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Measurement%> _measurement_1 = this.getMeasurement();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_measurement_1, &lt;%net.menthor.onto2.ontouml.Measurement%>.REAL);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isNominalString" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isNominal = this.isNominal();&#xA;if (!_isNominal)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isString = this.isString();&#xA;&#x9;_and = _isString;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isIntervalInteger" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isInterval = this.isInterval();&#xA;if (!_isInterval)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isInteger = this.isInteger();&#xA;&#x9;_and = _isInteger;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isIntervalDecimal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isInterval = this.isInterval();&#xA;if (!_isInterval)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isDecimal = this.isDecimal();&#xA;&#x9;_and = _isDecimal;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isOrdinalInteger" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isOrdinal = this.isOrdinal();&#xA;if (!_isOrdinal)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isInteger = this.isInteger();&#xA;&#x9;_and = _isInteger;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isOrdinalDecimal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isOrdinal = this.isOrdinal();&#xA;if (!_isOrdinal)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isDecimal = this.isDecimal();&#xA;&#x9;_and = _isDecimal;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isRationalInteger" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isRational = this.isRational();&#xA;if (!_isRational)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isInteger = this.isInteger();&#xA;&#x9;_and = _isInteger;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isRationalDecimal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isRational = this.isRational();&#xA;if (!_isRational)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isDecimal = this.isDecimal();&#xA;&#x9;_and = _isDecimal;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isIntervalReal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isInterval = this.isInterval();&#xA;if (!_isInterval)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isReal = this.isReal();&#xA;&#x9;_and = _isReal;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isOrdinalReal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isOrdinal = this.isOrdinal();&#xA;if (!_isOrdinal)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isReal = this.isReal();&#xA;&#x9;_and = _isReal;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isRationalReal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isRational = this.isRational();&#xA;if (!_isRational)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isReal = this.isReal();&#xA;&#x9;_and = _isReal;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isStructure" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _isDimension = this.isDimension();&#xA;if (_isDimension)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isDomain = this.isDomain();&#xA;&#x9;_or = _isDomain;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="stereotype" unique="false"
        eType="#//DataTypeStereotype"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="dimensions" upperBound="-1"
        eType="#//DataType" eOpposite="#//DataType/ownerDomain"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="scale" unique="false" eType="#//Scale"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="measurement" unique="false"
        eType="#//Measurement"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="unitOfMeasure" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="lowerBoundRegion" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EFloat"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="upperBoundRegion" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EFloat"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownerDomain" eType="#//DataType"
        eOpposite="#//DataType/dimensions"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="literals" upperBound="-1"
        eType="#//Literal" containment="true" resolveProxies="false" eOpposite="#//Literal/owner"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="structure" eType="#//DataType"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="QualityNature">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A Quality Nature defines the type of a quality. Possible types are&#xA; Nominal, Perceivable or NonPerceivable."/>
    </eAnnotations>
    <eLiterals name="Unset"/>
    <eLiterals name="Nominal"/>
    <eLiterals name="Perceivable"/>
    <eLiterals name="NonPerceivable"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Classification">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A Classification defines roles and phases to have a initial or final dynamic classificaiton."/>
    </eAnnotations>
    <eLiterals name="Unset"/>
    <eLiterals name="Initial"/>
    <eLiterals name="Final"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Existence">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* An Existence defines identity providers to be permanent, transient or eternal in time/existence"/>
    </eAnnotations>
    <eLiterals name="Unset"/>
    <eLiterals name="Permanent"/>
    <eLiterals name="Transient"/>
    <eLiterals name="Eternal"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Class" eSuperTypes="#//Type">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A &quot;Class&quot; is an Endurant, Perdurant or a HighOrder class."/>
    </eAnnotations>
    <eOperations name="isKind" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.ClassStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.ClassStereotype%>.KIND);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isSubKind" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.ClassStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.ClassStereotype%>.SUB_KIND);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isCollective" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.ClassStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.ClassStereotype%>.COLLECTIVE);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isQuantity" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.ClassStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.ClassStereotype%>.QUANTITY);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isRelator" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.ClassStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.ClassStereotype%>.RELATOR);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMode" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.ClassStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.ClassStereotype%>.MODE);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isQuality" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.ClassStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.ClassStereotype%>.QUALITY);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isRole" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.ClassStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.ClassStereotype%>.ROLE);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isRoleMixin" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.ClassStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.ClassStereotype%>.ROLE_MIXIN);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isPhaseMixin" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.ClassStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.ClassStereotype%>.PHASE_MIXIN);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isPhase" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.ClassStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.ClassStereotype%>.PHASE);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isCategory" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.ClassStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.ClassStereotype%>.CATEGORY);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMixin" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.ClassStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.ClassStereotype%>.MIXIN);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isEvent" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.ClassStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.ClassStereotype%>.EVENT);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isHighOrder" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.ClassStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.ClassStereotype%>.HIGH_ORDER);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isRigid" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _or_2 = false;&#xA;boolean _or_3 = false;&#xA;boolean _or_4 = false;&#xA;boolean _or_5 = false;&#xA;boolean _or_6 = false;&#xA;boolean _isKind = this.isKind();&#xA;if (_isKind)&#xA;{&#xA;&#x9;_or_6 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isCollective = this.isCollective();&#xA;&#x9;_or_6 = _isCollective;&#xA;}&#xA;if (_or_6)&#xA;{&#xA;&#x9;_or_5 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isQuantity = this.isQuantity();&#xA;&#x9;_or_5 = _isQuantity;&#xA;}&#xA;if (_or_5)&#xA;{&#xA;&#x9;_or_4 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isRelator = this.isRelator();&#xA;&#x9;_or_4 = _isRelator;&#xA;}&#xA;if (_or_4)&#xA;{&#xA;&#x9;_or_3 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMode = this.isMode();&#xA;&#x9;_or_3 = _isMode;&#xA;}&#xA;if (_or_3)&#xA;{&#xA;&#x9;_or_2 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isQuality = this.isQuality();&#xA;&#x9;_or_2 = _isQuality;&#xA;}&#xA;if (_or_2)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubKind = this.isSubKind();&#xA;&#x9;_or_1 = _isSubKind;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isCategory = this.isCategory();&#xA;&#x9;_or = _isCategory;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isNonRigid" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _or_2 = false;&#xA;boolean _or_3 = false;&#xA;boolean _isRole = this.isRole();&#xA;if (_isRole)&#xA;{&#xA;&#x9;_or_3 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhase = this.isPhase();&#xA;&#x9;_or_3 = _isPhase;&#xA;}&#xA;if (_or_3)&#xA;{&#xA;&#x9;_or_2 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isRoleMixin = this.isRoleMixin();&#xA;&#x9;_or_2 = _isRoleMixin;&#xA;}&#xA;if (_or_2)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhaseMixin = this.isPhaseMixin();&#xA;&#x9;_or_1 = _isPhaseMixin;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMixin = this.isMixin();&#xA;&#x9;_or = _isMixin;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isAntiRigid" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _or_2 = false;&#xA;boolean _isRole = this.isRole();&#xA;if (_isRole)&#xA;{&#xA;&#x9;_or_2 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhase = this.isPhase();&#xA;&#x9;_or_2 = _isPhase;&#xA;}&#xA;if (_or_2)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isRoleMixin = this.isRoleMixin();&#xA;&#x9;_or_1 = _isRoleMixin;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhaseMixin = this.isPhaseMixin();&#xA;&#x9;_or = _isPhaseMixin;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isSemiRigid" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return this.isMixin();"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isPerceivableQuality" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _and_1 = false;&#xA;boolean _isQuality = this.isQuality();&#xA;if (!_isQuality)&#xA;{&#xA;&#x9;_and_1 = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.QualityNature%> _qualityNature = this.getQualityNature();&#xA;&#x9;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_qualityNature, null));&#xA;&#x9;_and_1 = _notEquals;&#xA;}&#xA;if (!_and_1)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.QualityNature%> _qualityNature_1 = this.getQualityNature();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_qualityNature_1, &lt;%net.menthor.onto2.ontouml.QualityNature%>.PERCEIVABLE);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isNonPerceivableQuality" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _and_1 = false;&#xA;boolean _isQuality = this.isQuality();&#xA;if (!_isQuality)&#xA;{&#xA;&#x9;_and_1 = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.QualityNature%> _qualityNature = this.getQualityNature();&#xA;&#x9;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_qualityNature, null));&#xA;&#x9;_and_1 = _notEquals;&#xA;}&#xA;if (!_and_1)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.QualityNature%> _qualityNature_1 = this.getQualityNature();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_qualityNature_1, &lt;%net.menthor.onto2.ontouml.QualityNature%>.NON_PERCEIVABLE);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isNominalQuality" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _and_1 = false;&#xA;boolean _isQuality = this.isQuality();&#xA;if (!_isQuality)&#xA;{&#xA;&#x9;_and_1 = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.QualityNature%> _qualityNature = this.getQualityNature();&#xA;&#x9;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_qualityNature, null));&#xA;&#x9;_and_1 = _notEquals;&#xA;}&#xA;if (!_and_1)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.QualityNature%> _qualityNature_1 = this.getQualityNature();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_qualityNature_1, &lt;%net.menthor.onto2.ontouml.QualityNature%>.NOMINAL);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isEndurantClass" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _isEvent = this.isEvent();&#xA;if (_isEvent)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isHighOrder = this.isHighOrder();&#xA;&#x9;_or = _isHighOrder;&#xA;}&#xA;return (!_or);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isIntrinsicMoment" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _isNonQualitativeIntrinsicMoment = this.isNonQualitativeIntrinsicMoment();&#xA;if (_isNonQualitativeIntrinsicMoment)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isQualitativeIntrinsicMoment = this.isQualitativeIntrinsicMoment();&#xA;&#x9;_or = _isQualitativeIntrinsicMoment;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isSubstanceSortalClass" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _isKind = this.isKind();&#xA;if (_isKind)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isCollective = this.isCollective();&#xA;&#x9;_or_1 = _isCollective;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isQuantity = this.isQuantity();&#xA;&#x9;_or = _isQuantity;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMomentClass" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _isRelator = this.isRelator();&#xA;if (_isRelator)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMode = this.isMode();&#xA;&#x9;_or_1 = _isMode;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isQuality = this.isQuality();&#xA;&#x9;_or = _isQuality;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isIdentityProviderClass" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _or_2 = false;&#xA;boolean _or_3 = false;&#xA;boolean _or_4 = false;&#xA;boolean _isKind = this.isKind();&#xA;if (_isKind)&#xA;{&#xA;&#x9;_or_4 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isQuantity = this.isQuantity();&#xA;&#x9;_or_4 = _isQuantity;&#xA;}&#xA;if (_or_4)&#xA;{&#xA;&#x9;_or_3 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isCollective = this.isCollective();&#xA;&#x9;_or_3 = _isCollective;&#xA;}&#xA;if (_or_3)&#xA;{&#xA;&#x9;_or_2 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isRelator = this.isRelator();&#xA;&#x9;_or_2 = _isRelator;&#xA;}&#xA;if (_or_2)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMode = this.isMode();&#xA;&#x9;_or_1 = _isMode;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isQuality = this.isQuality();&#xA;&#x9;_or = _isQuality;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMixinClass" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _or_2 = false;&#xA;boolean _isMixin = this.isMixin();&#xA;if (_isMixin)&#xA;{&#xA;&#x9;_or_2 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isRoleMixin = this.isRoleMixin();&#xA;&#x9;_or_2 = _isRoleMixin;&#xA;}&#xA;if (_or_2)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhaseMixin = this.isPhaseMixin();&#xA;&#x9;_or_1 = _isPhaseMixin;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isCategory = this.isCategory();&#xA;&#x9;_or = _isCategory;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isAntiRigidMixinClass" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _isRoleMixin = this.isRoleMixin();&#xA;if (_isRoleMixin)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhaseMixin = this.isPhaseMixin();&#xA;&#x9;_or = _isPhaseMixin;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isAmountOfMatter" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="*&#xA;Checks if this element is an amount of matter i.e.&#xA;1) if it is a quantity element, or,&#xA;2) if it is a subKind or role/phase with exactly one identity provider of the type Quantity, or,&#xA;3) if it is a mixin class in which all their children are quantities."/>
        <details key="body" value="boolean _isQuantity = this.isQuantity();&#xA;if (_isQuantity)&#xA;{&#xA;&#x9;return true;&#xA;}&#xA;boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _isRole = this.isRole();&#xA;if (_isRole)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhase = this.isPhase();&#xA;&#x9;_or_1 = _isPhase;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubKind = this.isSubKind();&#xA;&#x9;_or = _isSubKind;&#xA;}&#xA;if (_or)&#xA;{&#xA;&#x9;&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> providers = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>newArrayList();&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> _identityProviders = this.identityProviders();&#xA;&#x9;providers.addAll(_identityProviders);&#xA;&#x9;for (final &lt;%net.menthor.onto2.ontouml.Class%> c : providers)&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _isQuantity_1 = c.isQuantity();&#xA;&#x9;&#x9;if (_isQuantity_1)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;boolean _isMixinClass = this.isMixinClass();&#xA;if (_isMixinClass)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _children = this.children();&#xA;&#x9;int _size = _children.size();&#xA;&#x9;boolean _equals = (_size == 0);&#xA;&#x9;if (_equals)&#xA;&#x9;{&#xA;&#x9;&#x9;return false;&#xA;&#x9;}&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _children_1 = this.children();&#xA;&#x9;for (final &lt;%net.menthor.onto2.ontouml.Classifier%> child : _children_1)&#xA;&#x9;{&#xA;&#x9;&#x9;if ((child instanceof &lt;%net.menthor.onto2.ontouml.Class%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;boolean _isQuantity_2 = ((&lt;%net.menthor.onto2.ontouml.Class%>)child).isQuantity();&#xA;&#x9;&#x9;&#x9;boolean _not = (!_isQuantity_2);&#xA;&#x9;&#x9;&#x9;if (_not)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;return true;&#xA;}&#xA;return false;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isFunctionalComplex" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="*&#xA;Checks if this element is a functional complex i.e.&#xA;1) If it is a kind, or&#xA;2) if it is a subKind or role/phase with exactly one identity provider of the type kind, or,&#xA;3) if it is a mixin class in which all their children are functional complexes."/>
        <details key="body" value="boolean _isKind = this.isKind();&#xA;if (_isKind)&#xA;{&#xA;&#x9;return true;&#xA;}&#xA;boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _isRole = this.isRole();&#xA;if (_isRole)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhase = this.isPhase();&#xA;&#x9;_or_1 = _isPhase;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubKind = this.isSubKind();&#xA;&#x9;_or = _isSubKind;&#xA;}&#xA;if (_or)&#xA;{&#xA;&#x9;&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> providers = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>newArrayList();&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> _identityProviders = this.identityProviders();&#xA;&#x9;providers.addAll(_identityProviders);&#xA;&#x9;for (final &lt;%net.menthor.onto2.ontouml.Class%> c : providers)&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _isKind_1 = c.isKind();&#xA;&#x9;&#x9;if (_isKind_1)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;boolean _isMixinClass = this.isMixinClass();&#xA;if (_isMixinClass)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _children = this.children();&#xA;&#x9;int _size = _children.size();&#xA;&#x9;boolean _equals = (_size == 0);&#xA;&#x9;if (_equals)&#xA;&#x9;{&#xA;&#x9;&#x9;return false;&#xA;&#x9;}&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _children_1 = this.children();&#xA;&#x9;for (final &lt;%net.menthor.onto2.ontouml.Classifier%> child : _children_1)&#xA;&#x9;{&#xA;&#x9;&#x9;if ((child instanceof &lt;%net.menthor.onto2.ontouml.Class%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;boolean _isKind_2 = ((&lt;%net.menthor.onto2.ontouml.Class%>)child).isKind();&#xA;&#x9;&#x9;&#x9;boolean _not = (!_isKind_2);&#xA;&#x9;&#x9;&#x9;if (_not)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;return true;&#xA;}&#xA;return false;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isCollection" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="*&#xA;Checks if this element is a collective i.e.&#xA;1) if it is a collective element, or,&#xA;2) if it is a subKind or role/phase with exactly one identity provider of the type Collective, or,&#xA;3) if it is a mixin class in which all their children are collectives."/>
        <details key="body" value="boolean _isCollective = this.isCollective();&#xA;if (_isCollective)&#xA;{&#xA;&#x9;return true;&#xA;}&#xA;boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _isRole = this.isRole();&#xA;if (_isRole)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhase = this.isPhase();&#xA;&#x9;_or_1 = _isPhase;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubKind = this.isSubKind();&#xA;&#x9;_or = _isSubKind;&#xA;}&#xA;if (_or)&#xA;{&#xA;&#x9;&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> providers = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>newArrayList();&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> _identityProviders = this.identityProviders();&#xA;&#x9;providers.addAll(_identityProviders);&#xA;&#x9;for (final &lt;%net.menthor.onto2.ontouml.Class%> c : providers)&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _isCollective_1 = c.isCollective();&#xA;&#x9;&#x9;if (_isCollective_1)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;boolean _isMixinClass = this.isMixinClass();&#xA;if (_isMixinClass)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _children = this.children();&#xA;&#x9;int _size = _children.size();&#xA;&#x9;boolean _equals = (_size == 0);&#xA;&#x9;if (_equals)&#xA;&#x9;{&#xA;&#x9;&#x9;return false;&#xA;&#x9;}&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _children_1 = this.children();&#xA;&#x9;for (final &lt;%net.menthor.onto2.ontouml.Classifier%> child : _children_1)&#xA;&#x9;{&#xA;&#x9;&#x9;if ((child instanceof &lt;%net.menthor.onto2.ontouml.Class%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;boolean _isCollective_2 = ((&lt;%net.menthor.onto2.ontouml.Class%>)child).isCollective();&#xA;&#x9;&#x9;&#x9;boolean _not = (!_isCollective_2);&#xA;&#x9;&#x9;&#x9;if (_not)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;return true;&#xA;}&#xA;return false;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMoment" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="*&#xA;Checks if this element is a moment  i.e.&#xA;1) if it is a relator, mode or quality element, or,&#xA;2) if it is a subKind or role/phase with exactly one identity provider being a relator, mode or quality, or,&#xA;3) if it is a mixin class in which all their children are relators, qualities or modes."/>
        <details key="body" value="boolean _isMomentClass = this.isMomentClass();&#xA;if (_isMomentClass)&#xA;{&#xA;&#x9;return true;&#xA;}&#xA;boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _isRole = this.isRole();&#xA;if (_isRole)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhase = this.isPhase();&#xA;&#x9;_or_1 = _isPhase;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubKind = this.isSubKind();&#xA;&#x9;_or = _isSubKind;&#xA;}&#xA;if (_or)&#xA;{&#xA;&#x9;&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> providers = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>newArrayList();&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> _identityProviders = this.identityProviders();&#xA;&#x9;providers.addAll(_identityProviders);&#xA;&#x9;for (final &lt;%net.menthor.onto2.ontouml.Class%> c : providers)&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _isMomentClass_1 = c.isMomentClass();&#xA;&#x9;&#x9;if (_isMomentClass_1)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;boolean _isMixinClass = this.isMixinClass();&#xA;if (_isMixinClass)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _children = this.children();&#xA;&#x9;int _size = _children.size();&#xA;&#x9;boolean _equals = (_size == 0);&#xA;&#x9;if (_equals)&#xA;&#x9;{&#xA;&#x9;&#x9;return false;&#xA;&#x9;}&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _children_1 = this.children();&#xA;&#x9;for (final &lt;%net.menthor.onto2.ontouml.Classifier%> child : _children_1)&#xA;&#x9;{&#xA;&#x9;&#x9;if ((child instanceof &lt;%net.menthor.onto2.ontouml.Class%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;boolean _isMomentClass_2 = ((&lt;%net.menthor.onto2.ontouml.Class%>)child).isMomentClass();&#xA;&#x9;&#x9;&#x9;boolean _not = (!_isMomentClass_2);&#xA;&#x9;&#x9;&#x9;if (_not)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;return true;&#xA;}&#xA;return false;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isTruthMaker" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="*&#xA;Checks if this element is a truth maker (relator) i.e.&#xA;1) if it is a truth maker element, or,&#xA;2) if it is a subKind or role/phase with exactly one identity provider being a truth maker, or,&#xA;3) if it is a mixin class in which all their children are truth makers."/>
        <details key="body" value="boolean _isRelator = this.isRelator();&#xA;if (_isRelator)&#xA;{&#xA;&#x9;return true;&#xA;}&#xA;boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _isRole = this.isRole();&#xA;if (_isRole)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhase = this.isPhase();&#xA;&#x9;_or_1 = _isPhase;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubKind = this.isSubKind();&#xA;&#x9;_or = _isSubKind;&#xA;}&#xA;if (_or)&#xA;{&#xA;&#x9;&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> providers = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>newArrayList();&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> _identityProviders = this.identityProviders();&#xA;&#x9;providers.addAll(_identityProviders);&#xA;&#x9;for (final &lt;%net.menthor.onto2.ontouml.Class%> c : providers)&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _isRelator_1 = c.isRelator();&#xA;&#x9;&#x9;if (_isRelator_1)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;boolean _isMixinClass = this.isMixinClass();&#xA;if (_isMixinClass)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _children = this.children();&#xA;&#x9;int _size = _children.size();&#xA;&#x9;boolean _equals = (_size == 0);&#xA;&#x9;if (_equals)&#xA;&#x9;{&#xA;&#x9;&#x9;return false;&#xA;&#x9;}&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _children_1 = this.children();&#xA;&#x9;for (final &lt;%net.menthor.onto2.ontouml.Classifier%> child : _children_1)&#xA;&#x9;{&#xA;&#x9;&#x9;if ((child instanceof &lt;%net.menthor.onto2.ontouml.Class%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;boolean _isRelator_2 = ((&lt;%net.menthor.onto2.ontouml.Class%>)child).isRelator();&#xA;&#x9;&#x9;&#x9;boolean _not = (!_isRelator_2);&#xA;&#x9;&#x9;&#x9;if (_not)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;return true;&#xA;}&#xA;return false;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isNonQualitativeIntrinsicMoment" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="*&#xA;Checks if this element is a non qualitative instrinsic moment (mode) i.e.&#xA;1) if it is a instrinsic moment which is a non qualitative element, or,&#xA;2) if it is a subKind or role/phase with exactly one identity provider being a non qualitative intrinsic moment, or,&#xA;3) if it is a mixin class in which all their children are non qualitative intrinsic moment."/>
        <details key="body" value="boolean _isMode = this.isMode();&#xA;if (_isMode)&#xA;{&#xA;&#x9;return true;&#xA;}&#xA;boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _isRole = this.isRole();&#xA;if (_isRole)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhase = this.isPhase();&#xA;&#x9;_or_1 = _isPhase;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubKind = this.isSubKind();&#xA;&#x9;_or = _isSubKind;&#xA;}&#xA;if (_or)&#xA;{&#xA;&#x9;&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> providers = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>newArrayList();&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> _identityProviders = this.identityProviders();&#xA;&#x9;providers.addAll(_identityProviders);&#xA;&#x9;for (final &lt;%net.menthor.onto2.ontouml.Class%> c : providers)&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _isMode_1 = c.isMode();&#xA;&#x9;&#x9;if (_isMode_1)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;boolean _isMixinClass = this.isMixinClass();&#xA;if (_isMixinClass)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _children = this.children();&#xA;&#x9;int _size = _children.size();&#xA;&#x9;boolean _equals = (_size == 0);&#xA;&#x9;if (_equals)&#xA;&#x9;{&#xA;&#x9;&#x9;return false;&#xA;&#x9;}&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _children_1 = this.children();&#xA;&#x9;for (final &lt;%net.menthor.onto2.ontouml.Classifier%> child : _children_1)&#xA;&#x9;{&#xA;&#x9;&#x9;if ((child instanceof &lt;%net.menthor.onto2.ontouml.Class%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;boolean _isMode_2 = ((&lt;%net.menthor.onto2.ontouml.Class%>)child).isMode();&#xA;&#x9;&#x9;&#x9;boolean _not = (!_isMode_2);&#xA;&#x9;&#x9;&#x9;if (_not)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;return true;&#xA;}&#xA;return false;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isQualitativeIntrinsicMoment" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="*&#xA;Checks if this element is a qualitative instrinsic moment (quality) i.e.&#xA;1) if it is a instrinsic moment which is a qualitative element, or,&#xA;2) if it is a subKind or role/phase with exactly one identity provider being a qualitative intrinsic moment, or,&#xA;3) if it is a mixin class in which all their children are qualitative intrinsic moment."/>
        <details key="body" value="boolean _isQuality = this.isQuality();&#xA;if (_isQuality)&#xA;{&#xA;&#x9;return true;&#xA;}&#xA;boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _isRole = this.isRole();&#xA;if (_isRole)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhase = this.isPhase();&#xA;&#x9;_or_1 = _isPhase;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubKind = this.isSubKind();&#xA;&#x9;_or = _isSubKind;&#xA;}&#xA;if (_or)&#xA;{&#xA;&#x9;&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> providers = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>newArrayList();&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> _identityProviders = this.identityProviders();&#xA;&#x9;providers.addAll(_identityProviders);&#xA;&#x9;for (final &lt;%net.menthor.onto2.ontouml.Class%> c : providers)&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _isQuality_1 = c.isQuality();&#xA;&#x9;&#x9;if (_isQuality_1)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;boolean _isMixinClass = this.isMixinClass();&#xA;if (_isMixinClass)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _children = this.children();&#xA;&#x9;int _size = _children.size();&#xA;&#x9;boolean _equals = (_size == 0);&#xA;&#x9;if (_equals)&#xA;&#x9;{&#xA;&#x9;&#x9;return false;&#xA;&#x9;}&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _children_1 = this.children();&#xA;&#x9;for (final &lt;%net.menthor.onto2.ontouml.Classifier%> child : _children_1)&#xA;&#x9;{&#xA;&#x9;&#x9;if ((child instanceof &lt;%net.menthor.onto2.ontouml.Class%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;boolean _isQuality_2 = ((&lt;%net.menthor.onto2.ontouml.Class%>)child).isQuality();&#xA;&#x9;&#x9;&#x9;boolean _not = (!_isQuality_2);&#xA;&#x9;&#x9;&#x9;if (_not)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;return true;&#xA;}&#xA;return false;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="identityProvidersAtAllParents" unique="false" upperBound="-1"
        eType="#//Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the identity providers amongst all parents of a class (more than one may be found)"/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _allParents = this.allParents();&#xA;for (final &lt;%net.menthor.onto2.ontouml.Classifier%> p : _allParents)&#xA;{&#xA;&#x9;if ((p instanceof &lt;%net.menthor.onto2.ontouml.Class%>))&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _isIdentityProviderClass = ((&lt;%net.menthor.onto2.ontouml.Class%>)p).isIdentityProviderClass();&#xA;&#x9;&#x9;if (_isIdentityProviderClass)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;result.add(((&lt;%net.menthor.onto2.ontouml.Class%>)p));&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="identityProvidersAtAllChildren" unique="false" upperBound="-1"
        eType="#//Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the identity providers amongst all children of a class (more than one may be found)"/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _allChildren = this.allChildren();&#xA;for (final &lt;%net.menthor.onto2.ontouml.Classifier%> p : _allChildren)&#xA;{&#xA;&#x9;if ((p instanceof &lt;%net.menthor.onto2.ontouml.Class%>))&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _isIdentityProviderClass = ((&lt;%net.menthor.onto2.ontouml.Class%>)p).isIdentityProviderClass();&#xA;&#x9;&#x9;if (_isIdentityProviderClass)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;result.add(((&lt;%net.menthor.onto2.ontouml.Class%>)p));&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;boolean _or = false;&#xA;&#x9;&#x9;boolean _or_1 = false;&#xA;&#x9;&#x9;boolean _isRole = ((&lt;%net.menthor.onto2.ontouml.Class%>)p).isRole();&#xA;&#x9;&#x9;if (_isRole)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;_or_1 = true;&#xA;&#x9;&#x9;} else&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;boolean _isPhase = this.isPhase();&#xA;&#x9;&#x9;&#x9;_or_1 = _isPhase;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (_or_1)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;_or = true;&#xA;&#x9;&#x9;} else&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;boolean _isSubKind = ((&lt;%net.menthor.onto2.ontouml.Class%>)p).isSubKind();&#xA;&#x9;&#x9;&#x9;_or = _isSubKind;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (_or)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> _identityProvidersAtAllParents = ((&lt;%net.menthor.onto2.ontouml.Class%>)p).identityProvidersAtAllParents();&#xA;&#x9;&#x9;&#x9;result.addAll(_identityProvidersAtAllParents);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="identityProviders" unique="false" upperBound="-1" eType="#//Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the identity providers of a class (more than one may be found)"/>
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>newArrayList();&#xA;boolean _isIdentityProviderClass = this.isIdentityProviderClass();&#xA;if (_isIdentityProviderClass)&#xA;{&#xA;&#x9;result.add(this);&#xA;}&#xA;boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _isRole = this.isRole();&#xA;if (_isRole)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhase = this.isPhase();&#xA;&#x9;_or_1 = _isPhase;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubKind = this.isSubKind();&#xA;&#x9;_or = _isSubKind;&#xA;}&#xA;if (_or)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> _identityProvidersAtAllParents = this.identityProvidersAtAllParents();&#xA;&#x9;result.addAll(_identityProvidersAtAllParents);&#xA;}&#xA;boolean _isMixinClass = this.isMixinClass();&#xA;if (_isMixinClass)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> _identityProvidersAtAllChildren = this.identityProvidersAtAllChildren();&#xA;&#x9;result.addAll(_identityProvidersAtAllChildren);&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> _allParents = this.allParents();&#xA;&#x9;for (final &lt;%net.menthor.onto2.ontouml.Classifier%> p : _allParents)&#xA;&#x9;{&#xA;&#x9;&#x9;if ((p instanceof &lt;%net.menthor.onto2.ontouml.Class%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Class%>> _identityProvidersAtAllChildren_1 = ((&lt;%net.menthor.onto2.ontouml.Class%>)p).identityProvidersAtAllChildren();&#xA;&#x9;&#x9;&#x9;result.addAll(_identityProvidersAtAllChildren_1);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Class%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="stereotype" unique="false"
        eType="#//ClassStereotype"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isExtensional" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="qualityNature" unique="false"
        eType="#//QualityNature"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="existence" unique="false"
        eType="#//Existence"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="classification" unique="false"
        eType="#//Classification"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EndPoint" eSuperTypes="#//Property">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* An End-Point of a relationship."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owner" lowerBound="1" eType="#//Relationship"
        eOpposite="#//Relationship/endPoints"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="endType" lowerBound="1"
        eType="#//Classifier"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subsets" ordered="false"
        upperBound="-1" eType="#//EndPoint" eOpposite="#//EndPoint/isSubsettedBy"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="redefines" ordered="false"
        upperBound="-1" eType="#//EndPoint" eOpposite="#//EndPoint/isRedefinedBy"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="isSubsettedBy" ordered="false"
        upperBound="-1" eType="#//EndPoint" eOpposite="#//EndPoint/subsets"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="isRedefinedBy" ordered="false"
        upperBound="-1" eType="#//EndPoint" eOpposite="#//EndPoint/redefines"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="RelationshipStereotype">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A Relationship Stereotype can be a ComponentOf, MemberOf,&#xA; SubCollectionOf, SubQuantityOf, QuaPartOf, Constitution,&#xA; Characterization, Mediation, Material, Formal, Derivation, Structuration,&#xA; Participation, SubEventOf, Causation, Temporal or InstanceOf."/>
    </eAnnotations>
    <eLiterals name="Unset"/>
    <eLiterals name="ComponentOf"/>
    <eLiterals name="MemberOf"/>
    <eLiterals name="SubCollectionOf"/>
    <eLiterals name="SubQuantityOf"/>
    <eLiterals name="QuaPartOf"/>
    <eLiterals name="Constitution"/>
    <eLiterals name="Characterization"/>
    <eLiterals name="Mediation"/>
    <eLiterals name="Material"/>
    <eLiterals name="Formal"/>
    <eLiterals name="Derivation"/>
    <eLiterals name="Structuration"/>
    <eLiterals name="Participation"/>
    <eLiterals name="SubEventOf"/>
    <eLiterals name="Causation"/>
    <eLiterals name="Temporal"/>
    <eLiterals name="InstanceOf"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="TemporalNature">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A Temporal Nature defines the type of a temporal relationship between events."/>
    </eAnnotations>
    <eLiterals name="Unset"/>
    <eLiterals name="Starts"/>
    <eLiterals name="Precedes"/>
    <eLiterals name="Equals"/>
    <eLiterals name="Meets"/>
    <eLiterals name="Finishes"/>
    <eLiterals name="Overlaps"/>
    <eLiterals name="During"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="ParticipationNature">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A Participation Nature defines the type of participation of an object in an event."/>
    </eAnnotations>
    <eLiterals name="Unset"/>
    <eLiterals name="Creation"/>
    <eLiterals name="Change"/>
    <eLiterals name="Destruction"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Reflexivity">
    <eLiterals name="Unset"/>
    <eLiterals name="Reflexive"/>
    <eLiterals name="Irreflexive"/>
    <eLiterals name="NonReflexive"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Symmetry">
    <eLiterals name="Unset"/>
    <eLiterals name="Symmetric"/>
    <eLiterals name="Assymetric"/>
    <eLiterals name="AntiSymmetric"/>
    <eLiterals name="NonSymmetric"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Transitivity">
    <eLiterals name="Unset"/>
    <eLiterals name="Transitive"/>
    <eLiterals name="Intransitive"/>
    <eLiterals name="NonTransitive"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Ciclicity">
    <eLiterals name="Unset"/>
    <eLiterals name="Cyclic"/>
    <eLiterals name="Acyclic"/>
    <eLiterals name="NonCyclic"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Relationship" eSuperTypes="#//Classifier">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* A Relationship can define reflexivity, symmetry, transitivity, ciclicity&#xA; and must assume more than 1 end point."/>
    </eAnnotations>
    <eOperations name="isComponentOf" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.RelationshipStereotype%>.COMPONENT_OF);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMemberOf" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.RelationshipStereotype%>.MEMBER_OF);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isSubCollectionOf" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.RelationshipStereotype%>.SUB_COLLECTION_OF);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isSubQuantityOf" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.RelationshipStereotype%>.SUB_QUANTITY_OF);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isQuaPartOf" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.RelationshipStereotype%>.QUA_PART_OF);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isConstitution" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.RelationshipStereotype%>.CONSTITUTION);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isCharacterization" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.RelationshipStereotype%>.CHARACTERIZATION);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMediation" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.RelationshipStereotype%>.MEDIATION);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMaterial" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.RelationshipStereotype%>.MATERIAL);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isFormal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.RelationshipStereotype%>.FORMAL);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isStructuration" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.RelationshipStereotype%>.STRUCTURATION);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isParticipation" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.RelationshipStereotype%>.PARTICIPATION);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isSubEventOf" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.RelationshipStereotype%>.SUB_EVENT_OF);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isCausation" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.RelationshipStereotype%>.CAUSATION);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isTemporal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.RelationshipStereotype%>.TEMPORAL);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isInstanceOf" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.RelationshipStereotype%>.INSTANCE_OF);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isDerivation" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.RelationshipStereotype%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.onto2.ontouml.RelationshipStereotype%>.DERIVATION);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMeronymic" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _or_2 = false;&#xA;boolean _or_3 = false;&#xA;boolean _or_4 = false;&#xA;boolean _isComponentOf = this.isComponentOf();&#xA;if (_isComponentOf)&#xA;{&#xA;&#x9;_or_4 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMemberOf = this.isMemberOf();&#xA;&#x9;_or_4 = _isMemberOf;&#xA;}&#xA;if (_or_4)&#xA;{&#xA;&#x9;_or_3 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubQuantityOf = this.isSubQuantityOf();&#xA;&#x9;_or_3 = _isSubQuantityOf;&#xA;}&#xA;if (_or_3)&#xA;{&#xA;&#x9;_or_2 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubCollectionOf = this.isSubCollectionOf();&#xA;&#x9;_or_2 = _isSubCollectionOf;&#xA;}&#xA;if (_or_2)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isConstitution = this.isConstitution();&#xA;&#x9;_or_1 = _isConstitution;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubEventOf = this.isSubEventOf();&#xA;&#x9;_or = _isSubEventOf;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isBinary" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> _endPoints = this.getEndPoints();&#xA;int _size = _endPoints.size();&#xA;return (_size == 2);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isTernary" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> _endPoints = this.getEndPoints();&#xA;int _size = _endPoints.size();&#xA;return (_size == 3);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isStarts" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isTemporal = this.isTemporal();&#xA;if (!_isTemporal)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.TemporalNature%> _temporalNature = this.getTemporalNature();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_temporalNature, &lt;%net.menthor.onto2.ontouml.TemporalNature%>.STARTS);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isPrecedes" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isTemporal = this.isTemporal();&#xA;if (!_isTemporal)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.TemporalNature%> _temporalNature = this.getTemporalNature();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_temporalNature, &lt;%net.menthor.onto2.ontouml.TemporalNature%>.PRECEDES);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isEquals" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isTemporal = this.isTemporal();&#xA;if (!_isTemporal)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.TemporalNature%> _temporalNature = this.getTemporalNature();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_temporalNature, &lt;%net.menthor.onto2.ontouml.TemporalNature%>.EQUALS);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMeets" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isTemporal = this.isTemporal();&#xA;if (!_isTemporal)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.TemporalNature%> _temporalNature = this.getTemporalNature();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_temporalNature, &lt;%net.menthor.onto2.ontouml.TemporalNature%>.MEETS);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isFinishes" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isTemporal = this.isTemporal();&#xA;if (!_isTemporal)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.TemporalNature%> _temporalNature = this.getTemporalNature();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_temporalNature, &lt;%net.menthor.onto2.ontouml.TemporalNature%>.FINISHES);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isOverlaps" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isTemporal = this.isTemporal();&#xA;if (!_isTemporal)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.TemporalNature%> _temporalNature = this.getTemporalNature();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_temporalNature, &lt;%net.menthor.onto2.ontouml.TemporalNature%>.OVERLAPS);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isDuring" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isTemporal = this.isTemporal();&#xA;if (!_isTemporal)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.TemporalNature%> _temporalNature = this.getTemporalNature();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_temporalNature, &lt;%net.menthor.onto2.ontouml.TemporalNature%>.DURING);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isCreation" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isParticipation = this.isParticipation();&#xA;if (!_isParticipation)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.ParticipationNature%> _participationNature = this.getParticipationNature();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_participationNature, &lt;%net.menthor.onto2.ontouml.ParticipationNature%>.CREATION);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isDestruction" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isParticipation = this.isParticipation();&#xA;if (!_isParticipation)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.ParticipationNature%> _participationNature = this.getParticipationNature();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_participationNature, &lt;%net.menthor.onto2.ontouml.ParticipationNature%>.DESTRUCTION);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isChange" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isParticipation = this.isParticipation();&#xA;if (!_isParticipation)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.ParticipationNature%> _participationNature = this.getParticipationNature();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_participationNature, &lt;%net.menthor.onto2.ontouml.ParticipationNature%>.CHANGE);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="sourceEnd" unique="false" eType="#//EndPoint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the source (first end-point) of this relationship"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> _endPoints = this.getEndPoints();&#xA;int _size = _endPoints.size();&#xA;boolean _greaterThan = (_size > 0);&#xA;if (_greaterThan)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> _endPoints_1 = this.getEndPoints();&#xA;&#x9;return _endPoints_1.get(0);&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="targetEnd" unique="false" eType="#//EndPoint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the target (second end-point) of this relationship"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> _endPoints = this.getEndPoints();&#xA;int _size = _endPoints.size();&#xA;boolean _greaterThan = (_size > 1);&#xA;if (_greaterThan)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> _endPoints_1 = this.getEndPoints();&#xA;&#x9;return _endPoints_1.get(1);&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="partEnd" unique="false" eType="#//EndPoint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _isMeronymic = this.isMeronymic();&#xA;if (_isMeronymic)&#xA;{&#xA;&#x9;return this.targetEnd();&#xA;}&#xA;else&#xA;{&#xA;&#x9;return null;&#xA;}"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="wholeEnd" unique="false" eType="#//EndPoint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _isMeronymic = this.isMeronymic();&#xA;if (_isMeronymic)&#xA;{&#xA;&#x9;return this.sourceEnd();&#xA;}&#xA;else&#xA;{&#xA;&#x9;return null;&#xA;}"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="source" unique="false" eType="#//Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the source (first end-classifier) of this relationship"/>
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.EndPoint%> _sourceEnd = this.sourceEnd();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_sourceEnd, null));&#xA;if (_notEquals)&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.EndPoint%> _sourceEnd_1 = this.sourceEnd();&#xA;&#x9;return _sourceEnd_1.getEndType();&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="target" unique="false" eType="#//Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the target (second end-classifier) of this relationship"/>
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.EndPoint%> _targetEnd = this.targetEnd();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_targetEnd, null));&#xA;if (_notEquals)&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.EndPoint%> _targetEnd_1 = this.targetEnd();&#xA;&#x9;return _targetEnd_1.getEndType();&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="sourceClass" unique="false" eType="#//Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the source (first end-class) of this relationship"/>
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.Classifier%> _source = this.source();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_source, null));&#xA;if (_notEquals)&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Classifier%> _source_1 = this.source();&#xA;&#x9;return ((&lt;%net.menthor.onto2.ontouml.Class%>) _source_1);&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="targetClass" unique="false" eType="#//Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the target (second end-class) of this relationship"/>
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.Classifier%> _target = this.target();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_target, null));&#xA;if (_notEquals)&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Classifier%> _target_1 = this.target();&#xA;&#x9;return ((&lt;%net.menthor.onto2.ontouml.Class%>) _target_1);&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="wholeClass" unique="false" eType="#//Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the source (first end-class) of this relationship"/>
        <details key="body" value="boolean _isMeronymic = this.isMeronymic();&#xA;if (_isMeronymic)&#xA;{&#xA;&#x9;return this.sourceClass();&#xA;}&#xA;else&#xA;{&#xA;&#x9;return null;&#xA;}"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="partClass" unique="false" eType="#//Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the target (second end-class) of this relationship"/>
        <details key="body" value="boolean _isMeronymic = this.isMeronymic();&#xA;if (_isMeronymic)&#xA;{&#xA;&#x9;return this.targetClass();&#xA;}&#xA;else&#xA;{&#xA;&#x9;return null;&#xA;}"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="sourceDataType" unique="false" eType="#//DataType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the source (first end-dataType) of this relationship"/>
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.Classifier%> _source = this.source();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_source, null));&#xA;if (_notEquals)&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Classifier%> _source_1 = this.source();&#xA;&#x9;return ((&lt;%net.menthor.onto2.ontouml.DataType%>) _source_1);&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="targetDataType" unique="false" eType="#//DataType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the target (second end-dataType) of this relationship"/>
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.Classifier%> _target = this.target();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_target, null));&#xA;if (_notEquals)&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Classifier%> _target_1 = this.target();&#xA;&#x9;return ((&lt;%net.menthor.onto2.ontouml.DataType%>) _target_1);&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="sourceRelationship" unique="false" eType="#//Relationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the source (first end-relationship) of this relationship"/>
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.Classifier%> _source = this.source();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_source, null));&#xA;if (_notEquals)&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Classifier%> _source_1 = this.source();&#xA;&#x9;return ((&lt;%net.menthor.onto2.ontouml.Relationship%>) _source_1);&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="targetRelationship" unique="false" eType="#//Relationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the target (second end-relationship) of this relationship"/>
        <details key="body" value="&lt;%net.menthor.onto2.ontouml.Classifier%> _target = this.target();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_target, null));&#xA;if (_notEquals)&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Classifier%> _target_1 = this.target();&#xA;&#x9;return ((&lt;%net.menthor.onto2.ontouml.Relationship%>) _target_1);&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isDerived" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Checks if this relationship is derived i.e. checking if there is at least one end-point which is derived"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> _endPoints = this.getEndPoints();&#xA;for (final &lt;%net.menthor.onto2.ontouml.EndPoint%> ep : _endPoints)&#xA;{&#xA;&#x9;boolean _isIsDerived = ep.isIsDerived();&#xA;&#x9;if (_isIsDerived)&#xA;&#x9;{&#xA;&#x9;&#x9;return true;&#xA;&#x9;}&#xA;}&#xA;return false;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isEnd" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Checks if there is at least one end-point in this relationship of classifier c."/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.EndPoint%>> _endPoints = this.getEndPoints();&#xA;for (final &lt;%net.menthor.onto2.ontouml.EndPoint%> ep : _endPoints)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;final &lt;%net.menthor.onto2.ontouml.Classifier%> type_ = ep.getEndType();&#xA;&#x9;&#x9;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(type_, null));&#xA;&#x9;&#x9;if (_notEquals)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;boolean _equals = type_.equals(c);&#xA;&#x9;&#x9;&#x9;if (_equals)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;return false;"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Classifier"/>
    </eOperations>
    <eOperations name="isPartEssential" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* A part is essential if the target end of a meronymic relationship is dependent on the rigid source type"/>
        <details key="body" value="boolean _and = false;&#xA;boolean _and_1 = false;&#xA;&lt;%net.menthor.onto2.ontouml.EndPoint%> _targetEnd = this.targetEnd();&#xA;boolean _isIsDependency = _targetEnd.isIsDependency();&#xA;if (!_isIsDependency)&#xA;{&#xA;&#x9;_and_1 = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Class%> _sourceClass = this.sourceClass();&#xA;&#x9;boolean _isRigid = _sourceClass.isRigid();&#xA;&#x9;_and_1 = _isRigid;&#xA;}&#xA;if (!_and_1)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMeronymic = this.isMeronymic();&#xA;&#x9;_and = _isMeronymic;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isPartInseparable" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* A part is inseparable if the source end of a meronymic relationship is dependent on the rigid target type"/>
        <details key="body" value="boolean _and = false;&#xA;boolean _and_1 = false;&#xA;&lt;%net.menthor.onto2.ontouml.EndPoint%> _sourceEnd = this.sourceEnd();&#xA;boolean _isIsDependency = _sourceEnd.isIsDependency();&#xA;if (!_isIsDependency)&#xA;{&#xA;&#x9;_and_1 = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Class%> _targetClass = this.targetClass();&#xA;&#x9;boolean _isRigid = _targetClass.isRigid();&#xA;&#x9;_and_1 = _isRigid;&#xA;}&#xA;if (!_and_1)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMeronymic = this.isMeronymic();&#xA;&#x9;_and = _isMeronymic;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isPartImmutable" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* A part is immutable if the source end of a meronymic relationship is dependent on the anti-rigid target type"/>
        <details key="body" value="boolean _and = false;&#xA;boolean _and_1 = false;&#xA;&lt;%net.menthor.onto2.ontouml.EndPoint%> _sourceEnd = this.sourceEnd();&#xA;boolean _isIsDependency = _sourceEnd.isIsDependency();&#xA;if (!_isIsDependency)&#xA;{&#xA;&#x9;_and_1 = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Class%> _targetClass = this.targetClass();&#xA;&#x9;boolean _isAntiRigid = _targetClass.isAntiRigid();&#xA;&#x9;_and_1 = _isAntiRigid;&#xA;}&#xA;if (!_and_1)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMeronymic = this.isMeronymic();&#xA;&#x9;_and = _isMeronymic;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isWholeImmutable" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* A whole is immutable if the target end of a meronymic relationship is dependent on the anti-rigid source type"/>
        <details key="body" value="boolean _and = false;&#xA;boolean _and_1 = false;&#xA;&lt;%net.menthor.onto2.ontouml.EndPoint%> _targetEnd = this.targetEnd();&#xA;boolean _isIsDependency = _targetEnd.isIsDependency();&#xA;if (!_isIsDependency)&#xA;{&#xA;&#x9;_and_1 = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Class%> _sourceClass = this.sourceClass();&#xA;&#x9;boolean _isAntiRigid = _sourceClass.isAntiRigid();&#xA;&#x9;_and_1 = _isAntiRigid;&#xA;}&#xA;if (!_and_1)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMeronymic = this.isMeronymic();&#xA;&#x9;_and = _isMeronymic;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isPartMandatory" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* A part is mandatory if the target end of a meronymic relationship has a lower bound of at least 1"/>
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.onto2.ontouml.EndPoint%> _targetEnd = this.targetEnd();&#xA;int _lowerBound = _targetEnd.getLowerBound();&#xA;boolean _greaterEqualsThan = (_lowerBound >= 1);&#xA;if (!_greaterEqualsThan)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMeronymic = this.isMeronymic();&#xA;&#x9;_and = _isMeronymic;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isWholeMandatory" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* A whole is mandatory if the source end of a meronymic relationship has a lower bound of at least 1"/>
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.onto2.ontouml.EndPoint%> _sourceEnd = this.sourceEnd();&#xA;int _lowerBound = _sourceEnd.getLowerBound();&#xA;boolean _greaterEqualsThan = (_lowerBound >= 1);&#xA;if (!_greaterEqualsThan)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMeronymic = this.isMeronymic();&#xA;&#x9;_and = _isMeronymic;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isPartShareable" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* A part is shareable if the source end of a meronymic relationship has a upper bound greater than 1"/>
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.onto2.ontouml.EndPoint%> _sourceEnd = this.sourceEnd();&#xA;int _upperBound = _sourceEnd.getUpperBound();&#xA;boolean _greaterThan = (_upperBound > 1);&#xA;if (!_greaterThan)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMeronymic = this.isMeronymic();&#xA;&#x9;_and = _isMeronymic;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="stereotype" unique="false"
        eType="#//RelationshipStereotype"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="reflexivity" unique="false"
        eType="#//Reflexivity"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="symmetry" unique="false"
        eType="#//Symmetry"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="transitivity" unique="false"
        eType="#//Transitivity"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ciclicity" unique="false"
        eType="#//Ciclicity"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="endPoints" upperBound="-1"
        eType="#//EndPoint" containment="true" resolveProxies="false" eOpposite="#//EndPoint/owner"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="temporalNature" unique="false"
        eType="#//TemporalNature"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="participationNature" unique="false"
        eType="#//ParticipationNature"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="GeneralizationSet" eSuperTypes="#//NamedElement #//ContainedElement">
    <eOperations name="general" unique="false" eType="#//Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Generalization%>> _generalizations = this.getGeneralizations();&#xA;int _size = _generalizations.size();&#xA;boolean _greaterThan = (_size > 0);&#xA;if (_greaterThan)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Generalization%>> _generalizations_1 = this.getGeneralizations();&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Generalization%> _get = _generalizations_1.get(0);&#xA;&#x9;return _get.getGeneral();&#xA;}&#xA;else&#xA;{&#xA;&#x9;return null;&#xA;}"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="specifics" unique="false" upperBound="-1" eType="#//Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%java.util.ArrayList%>&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>> result = &lt;%org.eclipse.xtext.xbase.lib.CollectionLiterals%>.&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>>newArrayList();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.onto2.ontouml.Generalization%>> _generalizations = this.getGeneralizations();&#xA;for (final &lt;%net.menthor.onto2.ontouml.Generalization%> g : _generalizations)&#xA;{&#xA;&#x9;&lt;%net.menthor.onto2.ontouml.Classifier%> _specific = g.getSpecific();&#xA;&#x9;result.add(_specific);&#xA;}&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.onto2.ontouml.Classifier%>>toEList(result);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isCovering" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDisjoint" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="generalizations" upperBound="-1"
        eType="#//Generalization" eOpposite="#//Generalization/generalizationSet"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="highOrder" eType="#//Class"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Generalization" eSuperTypes="#//ContainedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="general" lowerBound="1"
        eType="#//Classifier" eOpposite="#//Classifier/isGeneralIn"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="specific" lowerBound="1"
        eType="#//Classifier" eOpposite="#//Classifier/isSpecificIn"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="generalizationSet" eType="#//GeneralizationSet"
        eOpposite="#//GeneralizationSet/generalizations"/>
  </eClassifiers>
</ecore:EPackage>
